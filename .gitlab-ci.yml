default:
  image: registry.gitlab.com/opusdv/liblogur/cmake
  tags: 
    - aws
  
variables:
  CMAKE_VERSION: "3.22"

stages:
  - check
  - build
  - test
  - upload
  - release

sonarqube-check:
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only:
    - main # or the name of your main branch

dev_linter:
  stage: check
  script:
    - echo "Start linter cmake-format LLVM Style"
    - clang-format -i $(find . -name "*.c")
    - clang-format -i $(find . -name "*.h")

dev_build_bin_job:
  stage: build 
  script:
    - echo $CI_JOB_NAME
    - mkdir build
    - cd build
    - cmake ..
    - make
    - ls -l
  only:                                                                                                       
    - dev-v[0-9].[0-9].[0-9] 

dev_unit_testing_job:
  stage: test
  script:
    - ctest --rerun-failed --output-on-failure
  only:
    - dev-v[0-9].[0-9].[0-9]

dev_upload_rpm_job:
  image: curlimages/curl:latest
  stage: upload
  needs: 
    - job: dev_build_bin_job
      artifacts: true
  script:
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file build/liblogur-$CI_COMMIT_BRANCH-$CI_PIPELINE_ID.rpm "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/liblogur/$CI_COMMIT_BRANCH/liblogur-$COMMIT_BRANCH-$CI_PIPELINE_ID.rpm"'
  only:                                                                                                       
    - dev-v[0-9].[0-9].[0-9]

release_job:
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  stage: release
  needs:
    - job: dev_build_bin_job
      artifacts: true
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"
  script:
    - echo "CREATE RELEASE"
  release:
    name: "Release $CI_COMMIT_TAG"
    description: 'Created using the release-cli $EXTRA_DESCRIPTION'
    tag_name: $CI_COMMIT_TAG
    ref: $CI_COMMIT_TAG
    milestones:
      - 'm1'
    assets:
      links:
        - name: "liblogur-$CI_COMMIT_BRANCH.rpm"
          url: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/liblogur/$CI_COMMIT_BRANCH/liblogur-$CI_COMMIT_BRANCH-$CI_PIPELINE_ID.rpm"
