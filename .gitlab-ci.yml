default:
  image: registry.gitlab.com/opusdv/liblogur/cmake
  tags: 
    - aws
  
variables:
  CMAKE_VERSION: "3.22"
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/src/.sonar"
  GIT_DEPTH: "0"
  VERSION: "0.0.4"

stages:
  - validate
  - build
  - test
  - package
  - dock
  - upload

get-sonar-binaries:
  stage: .pre
  cache:
    policy: push
    key: "${CI_COMMIT_SHORT_SHA}"
    paths:
      - build-wrapper/
      - sonar-scanner/
  script:
    # Download sonar-scanner
    - curl -sSLo ./sonar-scanner.zip 'https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip'
    - unzip -o sonar-scanner.zip
    - mv sonar-scanner-4.7.0.2747-linux sonar-scanner
    # Download build-wrapper
    - curl -sSLo ./build-wrapper-linux-x86.zip "${SONAR_HOST_URL}/static/cpp/build-wrapper-linux-x86.zip"
    - unzip -oj build-wrapper-linux-x86.zip -d ./build-wrapper
  only:
    - main

dev_clang-format_job:
  stage: validate
  script:
    - find ./src/ ./include/  \( \( -name \*.c -o -name \*.h \) -a ! -iname \*soap\* \) -print0 | xargs -0 -n 1 clang-format --Werror -n --verbose
  only:
    - main

dev_build_job:
  stage: build
  cache:
    policy: pull-push
    key: "${CI_COMMIT_SHORT_SHA}"
    paths:
      - build/
      - lib/
      - build-wrapper/                                                                                        
      - sonar-scanner/
      - bw-output/
  script:
    - echo $CI_JOB_NAME
    - mkdir build
    - ls -l
    - cd build/
    - cmake ../cmake
    - ls -l
    - cd ../
    - build-wrapper/build-wrapper-linux-x86-64 --out-dir bw-output make -C build
    - ls -l
  only:
    - main

dev_unit_testing_job:                                                                                         
  stage: test                                                                                                 
  cache:                                                                                                      
    policy: pull                                                                                              
    key: "${CI_COMMIT_SHORT_SHA}"                                                                             
    paths:                                                                                                    
      - build/
      - lib/
      - build-wrapper/                                                                                       
      - sonar-scanner/   
      - bw-output/
  script:                                                                                                     
    - ls -l                                                                                                   
    - cd build                                                                                                
    - ls -l
    - make test
  only:                                                                                                       
    - main

sonarcloud-check:
  stage: test
  cache:                                                                                                      
    policy: pull-push                                                                                         
    key: "${CI_COMMIT_SHORT_SHA}"                                                                             
    paths:                                                                                                    
      - build-wrapper/                                                                                        
      - sonar-scanner/
      - bw-output/
  script:                                                                                                     
    - sonar-scanner/bin/sonar-scanner -Dsonar.host.url="${SONAR_HOST_URL}" -Dsonar.token="${SONAR_TOKEN}" -Dsonar.cfamily.build-wrapper-output=bw-output
  only:                                                                                                       
    - main 

dev_build_rpm_job:
  stage: package
  cache:
    policy: pull-push
    key: "${CI_COMMIT_SHORT_SHA}"
    paths:                                                                                                    
      - build/
  script:
    - ls -l
    - cd build
    - make package
  only:
    - main

dev_doc_job:
  stage: dock
  cache:                                                                                                      
    policy: pull-push                                                                                         
    key: "${CI_COMMIT_SHORT_SHA}"                                                                             
    paths:                                                                                                    
      - build/
  script:
    - ls -l
    - cd build
    - make docs
  only:
    - main

